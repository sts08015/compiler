
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left<>left+-left*/NAME NUMBERstatement : assign expressionassign : NAME "="statement : expressionexpression : NUMBERexpression : NAMEexpression : expression "+" expressionexpression : expression "-" expressionexpression : expression "*" expressionexpression : expression "/" expressionexpression : expression ">" expressionexpression : expression "<" expressionexpression : "(" expression ")"'
    
_lr_action_items = {'NAME':([0,2,6,9,10,11,12,13,14,15,],[4,8,8,8,8,8,8,8,8,-2,]),'NUMBER':([0,2,6,9,10,11,12,13,14,15,],[5,5,5,5,5,5,5,5,5,-2,]),'(':([0,2,6,9,10,11,12,13,14,15,],[6,6,6,6,6,6,6,6,6,-2,]),'$end':([1,3,4,5,7,8,17,18,19,20,21,22,23,],[0,-3,-5,-4,-1,-5,-6,-7,-8,-9,-10,-11,-12,]),'+':([3,4,5,7,8,16,17,18,19,20,21,22,23,],[9,-5,-4,9,-5,9,-6,-7,-8,-9,9,9,-12,]),'-':([3,4,5,7,8,16,17,18,19,20,21,22,23,],[10,-5,-4,10,-5,10,-6,-7,-8,-9,10,10,-12,]),'*':([3,4,5,7,8,16,17,18,19,20,21,22,23,],[11,-5,-4,11,-5,11,11,11,-8,-9,11,11,-12,]),'/':([3,4,5,7,8,16,17,18,19,20,21,22,23,],[12,-5,-4,12,-5,12,12,12,-8,-9,12,12,-12,]),'>':([3,4,5,7,8,16,17,18,19,20,21,22,23,],[13,-5,-4,13,-5,13,-6,-7,-8,-9,-10,-11,-12,]),'<':([3,4,5,7,8,16,17,18,19,20,21,22,23,],[14,-5,-4,14,-5,14,-6,-7,-8,-9,-10,-11,-12,]),'=':([4,],[15,]),')':([5,8,16,17,18,19,20,21,22,23,],[-4,-5,23,-6,-7,-8,-9,-10,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'assign':([0,],[2,]),'expression':([0,2,6,9,10,11,12,13,14,],[3,7,16,17,18,19,20,21,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> assign expression','statement',2,'p_statement_assign','lab8.py',45),
  ('assign -> NAME =','assign',2,'p_assign_seen','lab8.py',49),
  ('statement -> expression','statement',1,'p_statement_expr','lab8.py',53),
  ('expression -> NUMBER','expression',1,'p_expression_number','lab8.py',56),
  ('expression -> NAME','expression',1,'p_expression_name','lab8.py',61),
  ('expression -> expression + expression','expression',3,'p_expression_plus','lab8.py',66),
  ('expression -> expression - expression','expression',3,'p_expression_minus','lab8.py',70),
  ('expression -> expression * expression','expression',3,'p_expression_mul','lab8.py',74),
  ('expression -> expression / expression','expression',3,'p_expression_div','lab8.py',78),
  ('expression -> expression > expression','expression',3,'p_expression_ineq1','lab8.py',82),
  ('expression -> expression < expression','expression',3,'p_expression_ineq2','lab8.py',86),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','lab8.py',90),
]
